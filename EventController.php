<?php

namespace EventBundle\Controller;

use EventBundle\Entity\Event;
use EventBundle\Form\EventType;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\File\UploadedFile;
class EventController extends Controller
{
    public function afficheEventAction()
    {
        $formations = $this->getDoctrine()->getManager()->getRepository(Event::class)->findAll();
        return $this->render('@Event/Event/afficheEvent.html.twig', array('formations' => $formations));
    }

    public function ajoutEventAction(Request $request)
    {
        $formation = new Event();
        $form = $this->createForm(EventType::class, $formation);
        $form->handleRequest($request);
        if ($form->isSubmitted()) {
            $em = $this->getDoctrine()->getManager();
            /** @var UploadedFile $file */
            $file = $formation->getImage();
            $filename = $this->generateUniqueFileName() . '.' . $file->guessExtension();
            $file->move($this->getParameter('photos_directory'), $filename);
            $formation->setImage($filename);
            $em->persist($formation);//persister les donner dans la base de donnee
            $em->flush();//tlansi kif el commit
            return $this->redirectToRoute('event_afficheEvent');
        }
        return $this->render('@Event/Event/ajoutEvent.html.twig', array('form' => $form->createView()));
    }

    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    public function supprimeEventAction($id)
    {
        $em = $this->getDoctrine()->getManager();
        $event = $em->getRepository(Event::class)->find($id);
        $em->remove($event);
        $em->flush();
        return $this->redirectToRoute('event_afficheEvent');
    }

    public function modifieEventAction(Request $request,$id){

        $club= new Event();
        $em=$this->getDoctrine()->getManager();
        $club=$em->getRepository(Event::class)->find($id);
        $form=$this->createForm(EventType::class,$club);
        $form->handleRequest($request);
        if($form->isSubmitted()) {
            $em=$this->getDoctrine()->getManager();
            /** @var UploadedFile $file */
            $file = $club->getImage();
            $filename = $this->generateUniqueFileName().'.'.$file->guessExtension();
            $file->move($this->getParameter('photos_directory'), $filename);
            $club->setImage($filename);
            $em->flush();
            return $this->redirectToRoute('event_afficheEvent');
        }

        return $this->render('@Event/Event/modifieEvent.html.twig', array('form' => $form->createView()));




    }

    public function UserEventAction()
    {
        $em = $this->getDoctrine();
        $tab = $em->getRepository(Event::class)->findAll();
        return $this->render('@Event/Event/UserEvent.html.twig', array('events' => $tab));
    }
    public function  navigAction(){
        $formations = $this->getDoctrine()->getManager()->getRepository(Event::class)->findAll();
        return $this->render('@Event/Event/navig.html.twig',array('formations' => $formations));
    }
}